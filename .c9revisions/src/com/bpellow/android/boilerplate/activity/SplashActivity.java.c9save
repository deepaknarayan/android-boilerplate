{"ts":1352387262528,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"package com.bpellow.android.boilerplate.activity;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager;\nimport android.net.Uri;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.os.Environment;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.bpellow.android.boilerplate.R;\nimport com.bpellow.android.boilerplate.activity.model.ForceUpgrade;\nimport com.bpellow.android.boilerplate.net.ApiProxyStub;\nimport com.bpellow.android.boilerplate.net.UtilsStub;\nimport com.bpellow.android.boilerplate.util.Preferences;\nimport com.bpellow.android.boilerplate.util.RunnableUtils;\n\npublic class SplashActivity extends BaseActivity {\n\tprivate final int SPLASH_DELAY = 3000;\n\tprivate String versionName;\n\tprivate String versionCode;\n\tprivate ForceUpgradeTask forceUpgradeTask = new ForceUpgradeTask();\n\t\t\n    /** Called when the activity is first created. */\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.splash);\n        \n        try {\n        \tPackageInfo pinfo = getPackageManager().getPackageInfo(getPackageName(), 0);\n        \tTextView vers = (TextView)findViewById(R.id.version);\n        \tversionName = pinfo.versionName;\n        \tversionCode = String.valueOf(pinfo.versionCode);\n        \tvers.setText(versionName);\n        } catch (PackageManager.NameNotFoundException pe) {\n        \t// do nothing\n        }\n        \n        if (UtilsStub.hasNetworkConnection(self)) {\n        \tforceUpgradeTask.execute((Context)null);\n        } else {\n        \tprogressToNextActivity();\n        }\n    }\n    \n    public void progressToNextActivity() {\n        Runnable signInRunnable = RunnableUtils.startActivityRunnableFactory(this, SignInActivity.class, true);\n        Runnable mainMenuRunnable = RunnableUtils.startActivityRunnableFactory(this, MenuActivity.class, true);\n        \n        // after a splash delay, go to the logged out selector or current deal\n        if (Preferences.loggedInUser(this)) {\n        \thandler.postDelayed(mainMenuRunnable, SPLASH_DELAY);\n        } else {\n        \thandler.postDelayed(signInRunnable, SPLASH_DELAY);\n        }\n    }\n   \n    public void installForceUpgrade(String apkUrl) {\n    \ttry {\n    \t\tURL url = new URL(apkUrl);\n    \t\tHttpURLConnection c = (HttpURLConnection) url.openConnection();\n    \t\tc.setRequestMethod(\"GET\");\n    \t\tc.setDoOutput(true);\n    \t\tc.connect();\n\n    \t\tString PATH = Environment.getExternalStorageDirectory() + \"/download/\";\n    \t\tFile file = new File(PATH);\n    \t\tfile.mkdirs();\n    \t\tFile outputFile = new File(file, \"boilderplate_update.apk\");\n    \t\tFileOutputStream fos = new FileOutputStream(outputFile);\n    \t\tInputStream is = c.getInputStream();\n    \t\t\n    \t\tbyte[] buffer = new byte[1024];\n    \t\tint len1 = 0;\n    \t\twhile ((len1 = is.read(buffer)) != -1) {\n    \t\t\tfos.write(buffer, 0, len1);\n    \t\t}\n    \t\t\n    \t\tfos.close();\n    \t\tis.close();//till here, it works fine - .apk is download to my sdcard in download file\n    \t\t\n    \t\tIntent promptInstall = new Intent(Intent.ACTION_VIEW);\n    \t\tpromptInstall.setDataAndType(Uri.fromFile(new File(Environment.getExternalStorageDirectory() + \"/download/\" + \"boilerplate_update.apk\")), \"application/vnd.android.package-archive\");\n    \t\tstartActivity(promptInstall);  \n    \t} catch (IOException e) {\n    \t\tToast.makeText(getApplicationContext(), \"Update error!\", Toast.LENGTH_LONG).show();\n    \t}\n    }  \n    \n    \t\n    \t\n    /**\n     * sub-class of AsyncTask\n     */\n    protected class ForceUpgradeTask extends AsyncTask<Context, Integer, Boolean> {\n    \tprivate ForceUpgrade forceUpgrade;\n    \t\n    \t@Override\n    \tprotected void onPreExecute() {\n    \t\tsuper.onPreExecute();\n\t\t\tshowDialog(DIALOG_CHECK_FORCE_UPGRADE);\n    \t}\n\n\t\t@Override\n\t\tprotected Boolean doInBackground(Context... arg0) {\n\t\t\ttry {\n\t\t\t\tforceUpgrade = ApiProxyStub.isForceUpgradeRequired(versionCode, null);\n\t\t\t\treturn forceUpgrade.requireForceUpgrade();\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\t@Override\n\t\tprotected void onPostExecute(Boolean result) {\n\t\t\tsuper.onPostExecute(result);\n\t\t\tdismissDialog(DIALOG_CHECK_FORCE_UPGRADE);\n\t\t\tif (result) {\n\t\t\t\tString url = forceUpgrade.url();\n\t\t\t\t// do force upgrade to this url\n\t\t\t\tinstallForceUpgrade(url);\n\t\t\t} else {\n\t\t\t\tprogressToNextActivity();\n\t\t\t}\n\t\t}\n    }\n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":4602}]],"length":4602}
